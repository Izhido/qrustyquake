CC="x86_64-w64-mingw32-gcc"
AS="x86_64-w64-mingw32-as"
RANLIB="x86_64-w64-mingw32-ranlib"
AR="x86_64-w64-mingw32-ar"
WINDRES="x86_64-w64-mingw32-windres"
STRIP="x86_64-w64-mingw32-strip"
PATH+="/opt/cross_win64/bin"

CFLAGS = --static -c -D_USE_WINSOCK2 -lws2_32 -m64 -Wall -Wno-trigraphs -D_FILE_OFFSET_BITS=64
LDFLAGS = -lm -m64 -mwindows -static-libgcc -lws2_32
TARGET = qrustyquake
SRCS = chase.c cl_demo.c cl_input.c cl_main.c cl_parse.c \
	cl_tent.c cmd.c common.c console.c crc.c \
	cvar.c d_edge.c d_fill.c d_init.c d_modech.c \
	d_part.c d_polyse.c d_scan.c d_sky.c d_sprite.c \
	d_surf.c d_vars.c d_zpoint.c draw.c host.c \
	host_cmd.c in_sdl.c keys.c mathlib.c menu.c \
	model.c net_dgrm.c net_loop.c net_main.c net_vcr.c \
	net_win.c net_wins.c net_wipx.c nonintel.c pr_cmds.c \
	pr_edict.c pr_exec.c r_aclip.c r_alias.c r_bsp.c \
	r_draw.c r_edge.c r_efrag.c r_light.c r_main.c \
	r_misc.c r_part.c r_sky.c r_sprite.c r_surf.c \
	r_vars.c sbar.c screen.c snd_dma.c snd_mem.c \
	snd_mix.c snd_sdl.c sv_main.c sv_move.c sv_phys.c \
	sv_user.c sys_sdl.c vid_sdl.c view.c wad.c \
	world.c zone.c

OBJS = $(SRCS:.c=.o)

BUILD_TYPE ?= release

DEBUG_FLAGS = -g -O0
RELEASE_FLAGS = -O3

SDL_CFLAGS = -I../win/SDL2/include -D_REENTRANT
SDL_LIBS   = -L../win/SDL2/lib -lSDL2

ifeq ($(BUILD_TYPE), debug)
	CFLAGS += $(DEBUG_FLAGS)
else
	CFLAGS += $(RELEASE_FLAGS)
endif

all: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) $(SDL_LIBS) -o $(TARGET)

%.o: %.c
	$(CC) $(CFLAGS) $(SDL_CFLAGS) $< -o $@

debug:
	$(MAKE) BUILD_TYPE=debug

release:
	$(MAKE) BUILD_TYPE=release

clean:
	rm -f $(OBJS) $(TARGET)
